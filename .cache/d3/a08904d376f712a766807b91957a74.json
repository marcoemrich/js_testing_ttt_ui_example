{"id":"node_modules/ramda/es/take.js","dependencies":[{"name":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/package.json","includedInParent":true,"mtime":1602185185963},{"name":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/.babelrc","includedInParent":true,"mtime":1602185015623},{"name":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/package.json","includedInParent":true,"mtime":1602184504771},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20},"parent":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/es/take.js","resolved":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/es/internal/_curry2.js"},{"name":"./internal/_dispatchable.js","loc":{"line":2,"column":26},"parent":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/es/take.js","resolved":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/es/internal/_dispatchable.js"},{"name":"./internal/_xtake.js","loc":{"line":3,"column":19},"parent":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/es/take.js","resolved":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/es/internal/_xtake.js"},{"name":"./slice.js","loc":{"line":4,"column":18},"parent":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/es/take.js","resolved":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/es/slice.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _dispatchable2 = _interopRequireDefault(require(\"./internal/_dispatchable.js\"));\n\nvar _xtake2 = _interopRequireDefault(require(\"./internal/_xtake.js\"));\n\nvar _slice = _interopRequireDefault(require(\"./slice.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\nvar take = /*#__PURE__*/(0, _curry.default)( /*#__PURE__*/(0, _dispatchable2.default)(['take'], _xtake2.default, function take(n, xs) {\n  return (0, _slice.default)(0, n < 0 ? Infinity : n, xs);\n}));\nvar _default = take;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/take.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/take.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/take.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/take.js","original":{"line":4,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/ramda/es/take.js","original":{"line":5,"column":0}},{"generated":{"line":61,"column":0},"source":"node_modules/ramda/es/take.js","original":{"line":49,"column":0}},{"name":"take","generated":{"line":61,"column":4},"source":"node_modules/ramda/es/take.js","original":{"line":49,"column":4}},{"generated":{"line":61,"column":8},"source":"node_modules/ramda/es/take.js","original":{"line":49,"column":8}},{"generated":{"line":61,"column":11},"source":"node_modules/ramda/es/take.js","original":{"line":50,"column":0}},{"generated":{"line":61,"column":24},"source":"node_modules/ramda/es/take.js","original":{"line":51,"column":0}},{"generated":{"line":61,"column":45},"source":"node_modules/ramda/es/take.js","original":{"line":52,"column":0}},{"generated":{"line":61,"column":58},"source":"node_modules/ramda/es/take.js","original":{"line":53,"column":0}},{"generated":{"line":61,"column":86},"source":"node_modules/ramda/es/take.js","original":{"line":53,"column":14}},{"generated":{"line":61,"column":87},"source":"node_modules/ramda/es/take.js","original":{"line":53,"column":15}},{"generated":{"line":61,"column":93},"source":"node_modules/ramda/es/take.js","original":{"line":53,"column":14}},{"generated":{"line":61,"column":94},"source":"node_modules/ramda/es/take.js","original":{"line":53,"column":0}},{"name":"_xtake","generated":{"line":61,"column":96},"source":"node_modules/ramda/es/take.js","original":{"line":53,"column":24}},{"generated":{"line":61,"column":111},"source":"node_modules/ramda/es/take.js","original":{"line":53,"column":0}},{"generated":{"line":61,"column":113},"source":"node_modules/ramda/es/take.js","original":{"line":53,"column":32}},{"name":"take","generated":{"line":61,"column":122},"source":"node_modules/ramda/es/take.js","original":{"line":53,"column":41}},{"generated":{"line":61,"column":126},"source":"node_modules/ramda/es/take.js","original":{"line":53,"column":32}},{"name":"n","generated":{"line":61,"column":127},"source":"node_modules/ramda/es/take.js","original":{"line":53,"column":46}},{"generated":{"line":61,"column":128},"source":"node_modules/ramda/es/take.js","original":{"line":53,"column":32}},{"name":"xs","generated":{"line":61,"column":130},"source":"node_modules/ramda/es/take.js","original":{"line":53,"column":49}},{"generated":{"line":61,"column":132},"source":"node_modules/ramda/es/take.js","original":{"line":53,"column":32}},{"generated":{"line":61,"column":134},"source":"node_modules/ramda/es/take.js","original":{"line":53,"column":53}},{"generated":{"line":62,"column":0},"source":"node_modules/ramda/es/take.js","original":{"line":54,"column":2}},{"generated":{"line":62,"column":9},"source":"node_modules/ramda/es/take.js","original":{"line":54,"column":9}},{"generated":{"line":62,"column":29},"source":"node_modules/ramda/es/take.js","original":{"line":54,"column":15}},{"generated":{"line":62,"column":30},"source":"node_modules/ramda/es/take.js","original":{"line":54,"column":9}},{"name":"n","generated":{"line":62,"column":32},"source":"node_modules/ramda/es/take.js","original":{"line":54,"column":18}},{"generated":{"line":62,"column":33},"source":"node_modules/ramda/es/take.js","original":{"line":54,"column":19}},{"generated":{"line":62,"column":36},"source":"node_modules/ramda/es/take.js","original":{"line":54,"column":22}},{"generated":{"line":62,"column":37},"source":"node_modules/ramda/es/take.js","original":{"line":54,"column":18}},{"name":"Infinity","generated":{"line":62,"column":40},"source":"node_modules/ramda/es/take.js","original":{"line":54,"column":26}},{"generated":{"line":62,"column":48},"source":"node_modules/ramda/es/take.js","original":{"line":54,"column":18}},{"name":"n","generated":{"line":62,"column":51},"source":"node_modules/ramda/es/take.js","original":{"line":54,"column":37}},{"generated":{"line":62,"column":52},"source":"node_modules/ramda/es/take.js","original":{"line":54,"column":9}},{"name":"xs","generated":{"line":62,"column":54},"source":"node_modules/ramda/es/take.js","original":{"line":54,"column":40}},{"generated":{"line":62,"column":56},"source":"node_modules/ramda/es/take.js","original":{"line":54,"column":9}},{"generated":{"line":62,"column":57},"source":"node_modules/ramda/es/take.js","original":{"line":54,"column":2}},{"generated":{"line":63,"column":0},"source":"node_modules/ramda/es/take.js","original":{"line":55,"column":1}},{"generated":{"line":63,"column":1},"source":"node_modules/ramda/es/take.js","original":{"line":53,"column":0}},{"generated":{"line":63,"column":2},"source":"node_modules/ramda/es/take.js","original":{"line":51,"column":0}},{"generated":{"line":63,"column":3},"source":"node_modules/ramda/es/take.js","original":{"line":49,"column":0}},{"name":"take","generated":{"line":64,"column":15},"source":"node_modules/ramda/es/take.js","original":{"line":57,"column":15}}],"sources":{"node_modules/ramda/es/take.js":"import _curry2 from \"./internal/_curry2.js\";\nimport _dispatchable from \"./internal/_dispatchable.js\";\nimport _xtake from \"./internal/_xtake.js\";\nimport slice from \"./slice.js\";\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\n\nvar take =\n/*#__PURE__*/\n_curry2(\n/*#__PURE__*/\n_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\n\nexport default take;"},"lineCount":null}},"error":null,"hash":"6635ea8df191c4368eab71f165eb4be0","cacheData":{"env":{}}}