{"id":"node_modules/ramda/es/modulo.js","dependencies":[{"name":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/package.json","includedInParent":true,"mtime":1602194130739},{"name":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/.babelrc","includedInParent":true,"mtime":1602185015623},{"name":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/package.json","includedInParent":true,"mtime":1602189572866},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20},"parent":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/es/modulo.js","resolved":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/es/internal/_curry2.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      const isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\nvar modulo = /*#__PURE__*/(0, _curry.default)(function modulo(a, b) {\n  return a % b;\n});\nvar _default = modulo;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/modulo.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/modulo.js","original":{"line":2,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/modulo.js","original":{"line":28,"column":0}},{"name":"modulo","generated":{"line":37,"column":4},"source":"node_modules/ramda/es/modulo.js","original":{"line":28,"column":4}},{"generated":{"line":37,"column":10},"source":"node_modules/ramda/es/modulo.js","original":{"line":28,"column":10}},{"generated":{"line":37,"column":13},"source":"node_modules/ramda/es/modulo.js","original":{"line":29,"column":0}},{"generated":{"line":37,"column":26},"source":"node_modules/ramda/es/modulo.js","original":{"line":30,"column":0}},{"generated":{"line":37,"column":46},"source":"node_modules/ramda/es/modulo.js","original":{"line":30,"column":8}},{"name":"modulo","generated":{"line":37,"column":55},"source":"node_modules/ramda/es/modulo.js","original":{"line":30,"column":17}},{"generated":{"line":37,"column":61},"source":"node_modules/ramda/es/modulo.js","original":{"line":30,"column":8}},{"name":"a","generated":{"line":37,"column":62},"source":"node_modules/ramda/es/modulo.js","original":{"line":30,"column":24}},{"generated":{"line":37,"column":63},"source":"node_modules/ramda/es/modulo.js","original":{"line":30,"column":8}},{"name":"b","generated":{"line":37,"column":65},"source":"node_modules/ramda/es/modulo.js","original":{"line":30,"column":27}},{"generated":{"line":37,"column":66},"source":"node_modules/ramda/es/modulo.js","original":{"line":30,"column":8}},{"generated":{"line":37,"column":68},"source":"node_modules/ramda/es/modulo.js","original":{"line":30,"column":30}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/modulo.js","original":{"line":31,"column":2}},{"name":"a","generated":{"line":38,"column":9},"source":"node_modules/ramda/es/modulo.js","original":{"line":31,"column":9}},{"generated":{"line":38,"column":10},"source":"node_modules/ramda/es/modulo.js","original":{"line":31,"column":10}},{"name":"b","generated":{"line":38,"column":13},"source":"node_modules/ramda/es/modulo.js","original":{"line":31,"column":13}},{"generated":{"line":38,"column":14},"source":"node_modules/ramda/es/modulo.js","original":{"line":31,"column":2}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/modulo.js","original":{"line":32,"column":1}},{"generated":{"line":39,"column":1},"source":"node_modules/ramda/es/modulo.js","original":{"line":30,"column":0}},{"generated":{"line":39,"column":2},"source":"node_modules/ramda/es/modulo.js","original":{"line":28,"column":0}},{"name":"modulo","generated":{"line":40,"column":15},"source":"node_modules/ramda/es/modulo.js","original":{"line":34,"column":15}}],"sources":{"node_modules/ramda/es/modulo.js":"import _curry2 from \"./internal/_curry2.js\";\n/**\n * Divides the first parameter by the second and returns the remainder. Note\n * that this function preserves the JavaScript-style behavior for modulo. For\n * mathematical modulo see [`mathMod`](#mathMod).\n *\n * @func\n * @memberOf R\n * @since v0.1.1\n * @category Math\n * @sig Number -> Number -> Number\n * @param {Number} a The value to the divide.\n * @param {Number} b The pseudo-modulus\n * @return {Number} The result of `b % a`.\n * @see R.mathMod\n * @example\n *\n *      R.modulo(17, 3); //=> 2\n *      // JS behavior:\n *      R.modulo(-17, 3); //=> -2\n *      R.modulo(17, -3); //=> 2\n *\n *      const isOdd = R.modulo(R.__, 2);\n *      isOdd(42); //=> 0\n *      isOdd(21); //=> 1\n */\n\nvar modulo =\n/*#__PURE__*/\n_curry2(function modulo(a, b) {\n  return a % b;\n});\n\nexport default modulo;"},"lineCount":null}},"error":null,"hash":"67d0457ee567da03877c0f4cef43a292","cacheData":{"env":{}}}