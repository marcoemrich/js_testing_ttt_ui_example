{"id":"node_modules/ramda/es/applyTo.js","dependencies":[{"name":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/package.json","includedInParent":true,"mtime":1602194130739},{"name":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/.babelrc","includedInParent":true,"mtime":1602185015623},{"name":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/package.json","includedInParent":true,"mtime":1602189572866},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20},"parent":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/es/applyTo.js","resolved":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/es/internal/_curry2.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Takes a value and applies a function to it.\n *\n * This function is also known as the `thrush` combinator.\n *\n * @func\n * @memberOf R\n * @since v0.25.0\n * @category Function\n * @sig a -> (a -> b) -> b\n * @param {*} x The value\n * @param {Function} f The function to apply\n * @return {*} The result of applying `f` to `x`\n * @example\n *\n *      const t42 = R.applyTo(42);\n *      t42(R.identity); //=> 42\n *      t42(R.add(1)); //=> 43\n */\nvar applyTo = /*#__PURE__*/(0, _curry.default)(function applyTo(x, f) {\n  return f(x);\n});\nvar _default = applyTo;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/applyTo.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/applyTo.js","original":{"line":2,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/ramda/es/applyTo.js","original":{"line":22,"column":0}},{"name":"applyTo","generated":{"line":31,"column":4},"source":"node_modules/ramda/es/applyTo.js","original":{"line":22,"column":4}},{"generated":{"line":31,"column":11},"source":"node_modules/ramda/es/applyTo.js","original":{"line":22,"column":11}},{"generated":{"line":31,"column":14},"source":"node_modules/ramda/es/applyTo.js","original":{"line":23,"column":0}},{"generated":{"line":31,"column":27},"source":"node_modules/ramda/es/applyTo.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":47},"source":"node_modules/ramda/es/applyTo.js","original":{"line":24,"column":8}},{"name":"applyTo","generated":{"line":31,"column":56},"source":"node_modules/ramda/es/applyTo.js","original":{"line":24,"column":17}},{"generated":{"line":31,"column":63},"source":"node_modules/ramda/es/applyTo.js","original":{"line":24,"column":8}},{"name":"x","generated":{"line":31,"column":64},"source":"node_modules/ramda/es/applyTo.js","original":{"line":24,"column":25}},{"generated":{"line":31,"column":65},"source":"node_modules/ramda/es/applyTo.js","original":{"line":24,"column":8}},{"name":"f","generated":{"line":31,"column":67},"source":"node_modules/ramda/es/applyTo.js","original":{"line":24,"column":28}},{"generated":{"line":31,"column":68},"source":"node_modules/ramda/es/applyTo.js","original":{"line":24,"column":8}},{"generated":{"line":31,"column":70},"source":"node_modules/ramda/es/applyTo.js","original":{"line":24,"column":31}},{"generated":{"line":32,"column":0},"source":"node_modules/ramda/es/applyTo.js","original":{"line":25,"column":2}},{"name":"f","generated":{"line":32,"column":9},"source":"node_modules/ramda/es/applyTo.js","original":{"line":25,"column":9}},{"generated":{"line":32,"column":10},"source":"node_modules/ramda/es/applyTo.js","original":{"line":25,"column":10}},{"name":"x","generated":{"line":32,"column":11},"source":"node_modules/ramda/es/applyTo.js","original":{"line":25,"column":11}},{"generated":{"line":32,"column":12},"source":"node_modules/ramda/es/applyTo.js","original":{"line":25,"column":10}},{"generated":{"line":32,"column":13},"source":"node_modules/ramda/es/applyTo.js","original":{"line":25,"column":2}},{"generated":{"line":33,"column":0},"source":"node_modules/ramda/es/applyTo.js","original":{"line":26,"column":1}},{"generated":{"line":33,"column":1},"source":"node_modules/ramda/es/applyTo.js","original":{"line":24,"column":0}},{"generated":{"line":33,"column":2},"source":"node_modules/ramda/es/applyTo.js","original":{"line":22,"column":0}},{"name":"applyTo","generated":{"line":34,"column":15},"source":"node_modules/ramda/es/applyTo.js","original":{"line":28,"column":15}}],"sources":{"node_modules/ramda/es/applyTo.js":"import _curry2 from \"./internal/_curry2.js\";\n/**\n * Takes a value and applies a function to it.\n *\n * This function is also known as the `thrush` combinator.\n *\n * @func\n * @memberOf R\n * @since v0.25.0\n * @category Function\n * @sig a -> (a -> b) -> b\n * @param {*} x The value\n * @param {Function} f The function to apply\n * @return {*} The result of applying `f` to `x`\n * @example\n *\n *      const t42 = R.applyTo(42);\n *      t42(R.identity); //=> 42\n *      t42(R.add(1)); //=> 43\n */\n\nvar applyTo =\n/*#__PURE__*/\n_curry2(function applyTo(x, f) {\n  return f(x);\n});\n\nexport default applyTo;"},"lineCount":null}},"error":null,"hash":"168b51637c5ab57b8ae0970423c40206","cacheData":{"env":{}}}