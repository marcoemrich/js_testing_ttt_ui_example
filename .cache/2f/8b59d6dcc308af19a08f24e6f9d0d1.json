{"id":"node_modules/ramda/es/merge.js","dependencies":[{"name":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/package.json","includedInParent":true,"mtime":1602194130739},{"name":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/.babelrc","includedInParent":true,"mtime":1602185015623},{"name":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/package.json","includedInParent":true,"mtime":1602189572866},{"name":"./internal/_objectAssign.js","loc":{"line":1,"column":26},"parent":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/es/merge.js","resolved":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/es/internal/_objectAssign.js"},{"name":"./internal/_curry2.js","loc":{"line":2,"column":20},"parent":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/es/merge.js","resolved":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/es/internal/_curry2.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectAssign2 = _interopRequireDefault(require(\"./internal/_objectAssign.js\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @deprecated since v0.26.0\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.merge({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge(a, b) = {...a, ...b}\n */\nvar merge = /*#__PURE__*/(0, _curry.default)(function merge(l, r) {\n  return (0, _objectAssign2.default)({}, l, r);\n});\nvar _default = merge;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/merge.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/ramda/es/merge.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/ramda/es/merge.js","original":{"line":3,"column":0}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/merge.js","original":{"line":28,"column":0}},{"name":"merge","generated":{"line":38,"column":4},"source":"node_modules/ramda/es/merge.js","original":{"line":28,"column":4}},{"generated":{"line":38,"column":9},"source":"node_modules/ramda/es/merge.js","original":{"line":28,"column":9}},{"generated":{"line":38,"column":12},"source":"node_modules/ramda/es/merge.js","original":{"line":29,"column":0}},{"generated":{"line":38,"column":25},"source":"node_modules/ramda/es/merge.js","original":{"line":30,"column":0}},{"generated":{"line":38,"column":45},"source":"node_modules/ramda/es/merge.js","original":{"line":30,"column":8}},{"name":"merge","generated":{"line":38,"column":54},"source":"node_modules/ramda/es/merge.js","original":{"line":30,"column":17}},{"generated":{"line":38,"column":59},"source":"node_modules/ramda/es/merge.js","original":{"line":30,"column":8}},{"name":"l","generated":{"line":38,"column":60},"source":"node_modules/ramda/es/merge.js","original":{"line":30,"column":23}},{"generated":{"line":38,"column":61},"source":"node_modules/ramda/es/merge.js","original":{"line":30,"column":8}},{"name":"r","generated":{"line":38,"column":63},"source":"node_modules/ramda/es/merge.js","original":{"line":30,"column":26}},{"generated":{"line":38,"column":64},"source":"node_modules/ramda/es/merge.js","original":{"line":30,"column":8}},{"generated":{"line":38,"column":66},"source":"node_modules/ramda/es/merge.js","original":{"line":30,"column":29}},{"generated":{"line":39,"column":0},"source":"node_modules/ramda/es/merge.js","original":{"line":31,"column":2}},{"generated":{"line":39,"column":9},"source":"node_modules/ramda/es/merge.js","original":{"line":31,"column":9}},{"generated":{"line":39,"column":37},"source":"node_modules/ramda/es/merge.js","original":{"line":31,"column":23}},{"generated":{"line":39,"column":39},"source":"node_modules/ramda/es/merge.js","original":{"line":31,"column":9}},{"name":"l","generated":{"line":39,"column":41},"source":"node_modules/ramda/es/merge.js","original":{"line":31,"column":27}},{"generated":{"line":39,"column":42},"source":"node_modules/ramda/es/merge.js","original":{"line":31,"column":9}},{"name":"r","generated":{"line":39,"column":44},"source":"node_modules/ramda/es/merge.js","original":{"line":31,"column":30}},{"generated":{"line":39,"column":45},"source":"node_modules/ramda/es/merge.js","original":{"line":31,"column":9}},{"generated":{"line":39,"column":46},"source":"node_modules/ramda/es/merge.js","original":{"line":31,"column":2}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/merge.js","original":{"line":32,"column":1}},{"generated":{"line":40,"column":1},"source":"node_modules/ramda/es/merge.js","original":{"line":30,"column":0}},{"generated":{"line":40,"column":2},"source":"node_modules/ramda/es/merge.js","original":{"line":28,"column":0}},{"name":"merge","generated":{"line":41,"column":15},"source":"node_modules/ramda/es/merge.js","original":{"line":34,"column":15}}],"sources":{"node_modules/ramda/es/merge.js":"import _objectAssign from \"./internal/_objectAssign.js\";\nimport _curry2 from \"./internal/_curry2.js\";\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @deprecated since v0.26.0\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.merge({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge(a, b) = {...a, ...b}\n */\n\nvar merge =\n/*#__PURE__*/\n_curry2(function merge(l, r) {\n  return _objectAssign({}, l, r);\n});\n\nexport default merge;"},"lineCount":null}},"error":null,"hash":"0b53c9e14747d674b84dff93276ee858","cacheData":{"env":{}}}