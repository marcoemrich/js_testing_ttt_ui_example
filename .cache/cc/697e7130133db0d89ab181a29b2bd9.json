{"id":"node_modules/ramda/es/when.js","dependencies":[{"name":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/package.json","includedInParent":true,"mtime":1602185185963},{"name":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/.babelrc","includedInParent":true,"mtime":1602185015623},{"name":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/package.json","includedInParent":true,"mtime":1602184504771},{"name":"./internal/_curry3.js","loc":{"line":1,"column":20},"parent":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/es/when.js","resolved":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/es/internal/_curry3.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless, R.cond\n * @example\n *\n *      // truncate :: String -> String\n *      const truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\nvar when = /*#__PURE__*/(0, _curry.default)(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\nvar _default = when;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":2,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":31,"column":0}},{"name":"when","generated":{"line":40,"column":4},"source":"node_modules/ramda/es/when.js","original":{"line":31,"column":4}},{"generated":{"line":40,"column":8},"source":"node_modules/ramda/es/when.js","original":{"line":31,"column":8}},{"generated":{"line":40,"column":11},"source":"node_modules/ramda/es/when.js","original":{"line":32,"column":0}},{"generated":{"line":40,"column":24},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":0}},{"generated":{"line":40,"column":44},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":8}},{"name":"when","generated":{"line":40,"column":53},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":17}},{"generated":{"line":40,"column":57},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":8}},{"name":"pred","generated":{"line":40,"column":58},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":22}},{"generated":{"line":40,"column":62},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":8}},{"name":"whenTrueFn","generated":{"line":40,"column":64},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":28}},{"generated":{"line":40,"column":74},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":8}},{"name":"x","generated":{"line":40,"column":76},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":40}},{"generated":{"line":40,"column":77},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":8}},{"generated":{"line":40,"column":79},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":43}},{"generated":{"line":41,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":2}},{"name":"pred","generated":{"line":41,"column":9},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":9}},{"generated":{"line":41,"column":13},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":13}},{"name":"x","generated":{"line":41,"column":14},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":14}},{"generated":{"line":41,"column":15},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":13}},{"generated":{"line":41,"column":16},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":9}},{"name":"whenTrueFn","generated":{"line":41,"column":19},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":19}},{"generated":{"line":41,"column":29},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":29}},{"name":"x","generated":{"line":41,"column":30},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":30}},{"generated":{"line":41,"column":31},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":29}},{"generated":{"line":41,"column":32},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":9}},{"name":"x","generated":{"line":41,"column":35},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":35}},{"generated":{"line":41,"column":36},"source":"node_modules/ramda/es/when.js","original":{"line":34,"column":2}},{"generated":{"line":42,"column":0},"source":"node_modules/ramda/es/when.js","original":{"line":35,"column":1}},{"generated":{"line":42,"column":1},"source":"node_modules/ramda/es/when.js","original":{"line":33,"column":0}},{"generated":{"line":42,"column":2},"source":"node_modules/ramda/es/when.js","original":{"line":31,"column":0}},{"name":"when","generated":{"line":43,"column":15},"source":"node_modules/ramda/es/when.js","original":{"line":37,"column":15}}],"sources":{"node_modules/ramda/es/when.js":"import _curry3 from \"./internal/_curry3.js\";\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is satisfied, the function will return the result of calling\n * the `whenTrueFn` function with the same argument. If the predicate is not\n * satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred       A predicate function\n * @param {Function} whenTrueFn A function to invoke when the `condition`\n *                              evaluates to a truthy value.\n * @param {*}        x          An object to test with the `pred` function and\n *                              pass to `whenTrueFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n * @see R.ifElse, R.unless, R.cond\n * @example\n *\n *      // truncate :: String -> String\n *      const truncate = R.when(\n *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n *        R.pipe(R.take(10), R.append('…'), R.join(''))\n *      );\n *      truncate('12345');         //=> '12345'\n *      truncate('0123456789ABC'); //=> '0123456789…'\n */\n\nvar when =\n/*#__PURE__*/\n_curry3(function when(pred, whenTrueFn, x) {\n  return pred(x) ? whenTrueFn(x) : x;\n});\n\nexport default when;"},"lineCount":null}},"error":null,"hash":"53d24f1b970f5d48f3495be7a3d627b0","cacheData":{"env":{}}}