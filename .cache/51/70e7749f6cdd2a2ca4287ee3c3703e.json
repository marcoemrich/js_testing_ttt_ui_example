{"id":"node_modules/ramda/es/unless.js","dependencies":[{"name":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/package.json","includedInParent":true,"mtime":1602194130739},{"name":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/.babelrc","includedInParent":true,"mtime":1602185015623},{"name":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/package.json","includedInParent":true,"mtime":1602189572866},{"name":"./internal/_curry3.js","loc":{"line":1,"column":20},"parent":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/es/unless.js","resolved":"/home/memrich/sync/work/konferenzen_und_talks/2020/10_fh_salzburg/e2e_workshop/ttt-example/node_modules/ramda/es/internal/_curry3.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when, R.cond\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\nvar unless = /*#__PURE__*/(0, _curry.default)(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\nvar _default = unless;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":2,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":27,"column":0}},{"name":"unless","generated":{"line":36,"column":4},"source":"node_modules/ramda/es/unless.js","original":{"line":27,"column":4}},{"generated":{"line":36,"column":10},"source":"node_modules/ramda/es/unless.js","original":{"line":27,"column":10}},{"generated":{"line":36,"column":13},"source":"node_modules/ramda/es/unless.js","original":{"line":28,"column":0}},{"generated":{"line":36,"column":26},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":46},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":8}},{"name":"unless","generated":{"line":36,"column":55},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":17}},{"generated":{"line":36,"column":61},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":8}},{"name":"pred","generated":{"line":36,"column":62},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":24}},{"generated":{"line":36,"column":66},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":8}},{"name":"whenFalseFn","generated":{"line":36,"column":68},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":30}},{"generated":{"line":36,"column":79},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":8}},{"name":"x","generated":{"line":36,"column":81},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":43}},{"generated":{"line":36,"column":82},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":8}},{"generated":{"line":36,"column":84},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":46}},{"generated":{"line":37,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":2}},{"name":"pred","generated":{"line":37,"column":9},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":9}},{"generated":{"line":37,"column":13},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":13}},{"name":"x","generated":{"line":37,"column":14},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":14}},{"generated":{"line":37,"column":15},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":13}},{"generated":{"line":37,"column":16},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":9}},{"name":"x","generated":{"line":37,"column":19},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":19}},{"generated":{"line":37,"column":20},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":9}},{"name":"whenFalseFn","generated":{"line":37,"column":23},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":23}},{"generated":{"line":37,"column":34},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":34}},{"name":"x","generated":{"line":37,"column":35},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":35}},{"generated":{"line":37,"column":36},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":34}},{"generated":{"line":37,"column":37},"source":"node_modules/ramda/es/unless.js","original":{"line":30,"column":2}},{"generated":{"line":38,"column":0},"source":"node_modules/ramda/es/unless.js","original":{"line":31,"column":1}},{"generated":{"line":38,"column":1},"source":"node_modules/ramda/es/unless.js","original":{"line":29,"column":0}},{"generated":{"line":38,"column":2},"source":"node_modules/ramda/es/unless.js","original":{"line":27,"column":0}},{"name":"unless","generated":{"line":39,"column":15},"source":"node_modules/ramda/es/unless.js","original":{"line":33,"column":15}}],"sources":{"node_modules/ramda/es/unless.js":"import _curry3 from \"./internal/_curry3.js\";\n/**\n * Tests the final argument by passing it to the given predicate function. If\n * the predicate is not satisfied, the function will return the result of\n * calling the `whenFalseFn` function with the same argument. If the predicate\n * is satisfied, the argument is returned as is.\n *\n * @func\n * @memberOf R\n * @since v0.18.0\n * @category Logic\n * @sig (a -> Boolean) -> (a -> a) -> a -> a\n * @param {Function} pred        A predicate function\n * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n *                               to a falsy value.\n * @param {*}        x           An object to test with the `pred` function and\n *                               pass to `whenFalseFn` if necessary.\n * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n * @see R.ifElse, R.when, R.cond\n * @example\n *\n *      let safeInc = R.unless(R.isNil, R.inc);\n *      safeInc(null); //=> null\n *      safeInc(1); //=> 2\n */\n\nvar unless =\n/*#__PURE__*/\n_curry3(function unless(pred, whenFalseFn, x) {\n  return pred(x) ? x : whenFalseFn(x);\n});\n\nexport default unless;"},"lineCount":null}},"error":null,"hash":"b3ab1c955c69163f36750d0f3c8790a8","cacheData":{"env":{}}}